PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE Node_Node (
    node_id integer,
    target_node_id integer,
    foreign key ( node_id ) references Node ( id ) on delete set null,
    foreign key ( target_node_id ) references Node ( id ) on delete set null
);
INSERT INTO "Node_Node" VALUES(6,8);
INSERT INTO "Node_Node" VALUES(5,6);
INSERT INTO "Node_Node" VALUES(6,10);
INSERT INTO "Node_Node" VALUES(6,11);
INSERT INTO "Node_Node" VALUES(5,12);
INSERT INTO "Node_Node" VALUES(5,14);
INSERT INTO "Node_Node" VALUES(6,17);
INSERT INTO "Node_Node" VALUES(NULL,19);
INSERT INTO "Node_Node" VALUES(19,20);
INSERT INTO "Node_Node" VALUES(19,21);
INSERT INTO "Node_Node" VALUES(NULL,22);
INSERT INTO "Node_Node" VALUES(22,23);
INSERT INTO "Node_Node" VALUES(22,24);
INSERT INTO "Node_Node" VALUES(NULL,25);
INSERT INTO "Node_Node" VALUES(25,26);
INSERT INTO "Node_Node" VALUES(25,27);
INSERT INTO "Node_Node" VALUES(17,NULL);
INSERT INTO "Node_Node" VALUES(5,28);
CREATE TABLE Node (
    id integer primary key autoincrement,
    name varchar(255),
    value text
    );
INSERT INTO "Node" VALUES(5,'homepage',NULL);
INSERT INTO "Node" VALUES(6,'site',NULL);
INSERT INTO "Node" VALUES(7,'footer_copy',NULL);
INSERT INTO "Node" VALUES(8,'footer_copy','footer_copy.md');
INSERT INTO "Node" VALUES(10,'location','Salt Llama City');
INSERT INTO "Node" VALUES(11,'contact','bob');
INSERT INTO "Node" VALUES(12,'description','homepage-description.txt');
INSERT INTO "Node" VALUES(14,'logo_large',NULL);
INSERT INTO "Node" VALUES(17,'bottom_nav',NULL);
INSERT INTO "Node" VALUES(28,'preface','preface.md');
CREATE TABLE Route (
    id integer primary key autoincrement,
    path text not null,
    node_id integer,
    weight integer default 0,
    method varchar(10) default 'GET',
    foreign key ( node_id ) references Node ( id ) on delete set null
);
INSERT INTO "Route" VALUES(2,'/',5,'','GET');
CREATE TABLE SelectSQL (
    id integer primary key autoincrement,
    name varchar(255) not null
);
INSERT INTO "SelectSQL" VALUES(1,'select_link_node_from_node.sql');
INSERT INTO "SelectSQL" VALUES(11,'select_picture_for_node.sql');
CREATE TABLE SelectSQL_Node (
    selectsql_id integer,
    node_id integer,
    foreign key ( selectsql_id ) references SelectSQL ( id ) on delete set null,
    foreign key ( node_id ) references Node ( id ) on delete set null
);
INSERT INTO "SelectSQL_Node" VALUES(1,1);
INSERT INTO "SelectSQL_Node" VALUES(1,5);
INSERT INTO "SelectSQL_Node" VALUES(1,6);
INSERT INTO "SelectSQL_Node" VALUES(1,4);
INSERT INTO "SelectSQL_Node" VALUES(11,13);
INSERT INTO "SelectSQL_Node" VALUES(11,5);
INSERT INTO "SelectSQL_Node" VALUES(11,14);
INSERT INTO "SelectSQL_Node" VALUES(1,15);
INSERT INTO "SelectSQL_Node" VALUES(1,19);
INSERT INTO "SelectSQL_Node" VALUES(1,22);
INSERT INTO "SelectSQL_Node" VALUES(1,25);
INSERT INTO "SelectSQL_Node" VALUES(1,17);
CREATE TABLE Template (
    id integer primary key autoincrement,
    name varchar(255) unique not null
);
INSERT INTO "Template" VALUES(1,'homepage.html');
INSERT INTO "Template" VALUES(3,'logo_large.html');
CREATE TABLE Template_Node (
    template_id integer,
    node_id integer unique,
    foreign key ( template_id ) references Template ( id ) on delete set null,
    foreign key ( node_id ) references Node ( id ) on delete set null
);
INSERT INTO "Template_Node" VALUES(1,5);
INSERT INTO "Template_Node" VALUES(3,14);
CREATE TABLE Picture (
  id integer primary key autoincrement,
  picturename varchar(64) unique not null,
  /* picturename:
    For user use only, or for listing in
    a management interface, could also be used for
    the shown filename.
    */
  artdirected boolean default false,
    -- Hint for the template to use <picture> or <img[srcset]>.
  title text,
  description text,
  author integer references Node (id),
  created text,
    /* TODO: remove 'image' here and use a Picture_Image table instead so there
     * can be multiple images linked to a picture. */
  image integer references Image (id) not null,
  /*
   * image is not null as its used as the src attribute in img tag. <picture>
   * requires having an img.
   */
  original integer references Image (id)
);
INSERT INTO "Picture" VALUES(2,'logo','false','logo','','','',2,NULL);
CREATE TABLE Image (
  id integer primary key autoincrement,
  width integer not null,
  height integer not null,
  srcset integer references Srcset (id),
  staticfile integer references StaticFile (id) not null
);
INSERT INTO "Image" VALUES(2,213,213,NULL,2);
CREATE TABLE Srcset (
  id integer primary key autoincrement,
  picture integer references Picture (id)
);
CREATE TABLE StaticFile (
  id integer primary key autoincrement,
  path varchar(255) not null,
  contenttype varchar(64)
);
INSERT INTO "StaticFile" VALUES(2,'box.svg',NULL);
CREATE TABLE Node_Picture (
    node_id integer references Node (id) not null,
    picture integer references Picture (id) not null
);
INSERT INTO "Node_Picture" VALUES(14,2);
DELETE FROM sqlite_sequence;
INSERT INTO "sqlite_sequence" VALUES('Node',28);
INSERT INTO "sqlite_sequence" VALUES('Route',3);
INSERT INTO "sqlite_sequence" VALUES('SelectSQL',14);
INSERT INTO "sqlite_sequence" VALUES('Template',4);
INSERT INTO "sqlite_sequence" VALUES('StaticFile',2);
INSERT INTO "sqlite_sequence" VALUES('Image',2);
INSERT INTO "sqlite_sequence" VALUES('Picture',2);
COMMIT;
